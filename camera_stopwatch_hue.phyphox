<phyphox version="1.19" locale="en">
  <title>Camera stopwatch: Color</title>
  <category>Timers</category>
  <description>
    Measure times between changes in color, for example caused by passing objects.

    This configuration allows you to set a lower threshold and an upper threshold for the average hue in the measurement rectangle. If the hue falls within the range, the current time is noted as a trigger event. Times between different events as well as the duration of these events are recorded.

    Note, that phyphox expresses hue in the range of 0° to 360° and uses cyclic averaging. If the lower threshold is larger than the upper threshold, the hue range across the 360° to 0° is selected. For example, a range from 10° to 30° will trigger on 20°, but not on 40°. But a range from 350° to 10° will trigger on 359° as well as 0°, but not on 20°.

    The temporal resolution is determined by the camera's preview frame rate, which typically is fixed at 30fps, resulting in a sample rate of 33 ms. Note, that phyphox uses the preview stream of the camera for real-time analysis, which is limited to this rate. If your phone offers high-speed or slow motion recordings, the higher frame rates are only available in the recording (not in realtime), which is currently not used by phyphox.

    Be aware that automatic white balance as well as auto exposure may cause a drift in the determined colors and thus in the exact thresholds for triggering.
  </description>
  <icon format="base64">
    
  </icon>
  <data-containers>
    <container size="0">inHue</container>
    <container size="0">inT</container>

    <container size="1">thisHue</container>
    <container size="1">thisT</container>
    <container size="1">willTrigger</container>
    <container size="1">isOnEvent</container>
    <container size="1">isOffEvent</container>

    <container>threshold_low</container>
    <container>threshold_high</container>

    <container size="0">amplitude</container>
    <container size="0">t</container>

    <container size="1" init="0">triggering</container>
    <container size="0">onEvents</container>
    <container size="0">offEvents</container>

    <container size="0">dtlist</container>
    <container size="0">ddlist</container>
    <container size="0">tindex</container>
    <container size="1">tcount</container>
    <container size="1">tcount-1</container>

    <container>avgInterval</container>
    <container>avgRate</container>
    <container>avgBPM</container>

    <container init="0">on0</container>
    <container init="0">on1</container>
    <container init="0">on2</container>
    <container init="0">on3</container>
    <container init="0">on4</container>
    <container init="0">on5</container>
    <container init="0">off0</container>
    <container init="0">off1</container>
    <container init="0">off2</container>
    <container init="0">off3</container>
    <container init="0">off4</container>
    <container init="0">off5</container>
    <container>don0</container>
    <container>don1</container>
    <container>don2</container>
    <container>don3</container>
    <container>don4</container>
    <container>don5</container>
    <container>dt01</container>
    <container>dt02</container>
    <container>dt03</container>
    <container>dt04</container>
    <container>dt05</container>
    <container>dt12</container>
    <container>dt23</container>
    <container>dt34</container>
    <container>dt45</container>
    <container init="0">reset</container>
    <container size="1">count</container>
    <container size="1">rate</container>
  </data-containers>
<input>
    <camera auto_exposure="true" feature="photometric" x1="0.4" x2="0.6" y1="0.4" y2="0.6">
        <output component="hue">inHue</output>
        <output component="t">inT</output>
    </camera>
</input>
  <views>
    <view label="Settings">
      <camera-gui label="Preview" exposure_adjustment_level="3" />
      <edit label="Trigger from" unit="[[unit_short_degree]]" default="10" signed="false" min="0" max="360">
        <output>threshold_low</output>
      </edit>
      <edit label="to" unit="[[unit_short_degree]]" default="40" signed="false" min="0" max="360">
        <output>threshold_high</output>
      </edit>
      <image src="hue.png" />
      <separator height="1"/>
      <info label="The timer triggers if the measure hue falls within the given range. Note that hue is cyclic, so you can for example set a range from 350° to 10° to cover red at 355° as well as 0°. You can estimate a suitable threshold for your other trigger from the graph below."/>
      <separator height="1"/>
      <graph label="Hue" labelX="[[quantity_short_time]]" unitX="[[unit_short_second]]" labelY="Hue" unitY="[[unit_short_degree]]" partialUpdate="true">
        <input axis="x">t</input>
        <input axis="y">amplitude</input>
      </graph>
            <value label="Average rate" unit="Hz" precision="1">
                <input>rate</input>
            </value>
    </view>
    <view label="Sequence">
      <value label="Time 1" size="3" precision="2" unit="[[unit_short_second]]">
        <input>dt01</input>
      </value>
      <value label="Time 2" size="3" precision="2" unit="[[unit_short_second]]">
        <input>dt12</input>
      </value>
      <value label="Time 3" size="3" precision="2" unit="[[unit_short_second]]">
        <input>dt23</input>
      </value>
      <value label="Time 4" size="3" precision="2" unit="[[unit_short_second]]">
        <input>dt34</input>
      </value>
      <value label="Time 5" size="3" precision="2" unit="[[unit_short_second]]">
        <input>dt45</input>
      </value>
      <separator height="1"/>
      <button label="Reset">
        <input type="value">1</input>
        <output>reset</output>
      </button>
    </view>
    <view label="Parallel">
      <value label="Time 1" size="3" precision="2" unit="[[unit_short_second]]">
        <input>dt01</input>
      </value>
      <value label="Time 2" size="3" precision="2" unit="[[unit_short_second]]">
        <input>dt02</input>
      </value>
      <value label="Time 3" size="3" precision="2" unit="[[unit_short_second]]">
        <input>dt03</input>
      </value>
      <value label="Time 4" size="3" precision="2" unit="[[unit_short_second]]">
        <input>dt04</input>
      </value>
      <value label="Time 5" size="3" precision="2" unit="[[unit_short_second]]">
        <input>dt05</input>
      </value>
      <separator height="1"/>
      <button label="Reset">
        <input type="value">1</input>
        <output>reset</output>
      </button>
    </view>
    <view label="Duration">
      <value label="Trigger duration 0" size="3" precision="2" unit="[[unit_short_second]]">
        <input>don0</input>
      </value>
      <value label="Trigger duration 1" size="3" precision="2" unit="[[unit_short_second]]">
        <input>don1</input>
      </value>
      <value label="Trigger duration 2" size="3" precision="2" unit="[[unit_short_second]]">
        <input>don2</input>
      </value>
      <value label="Trigger duration 3" size="3" precision="2" unit="[[unit_short_second]]">
        <input>don3</input>
      </value>
      <value label="Trigger duration 4" size="3" precision="2" unit="[[unit_short_second]]">
        <input>don4</input>
      </value>
      <value label="Trigger duration 5" size="3" precision="2" unit="[[unit_short_second]]">
        <input>don5</input>
      </value>
      <separator height="1"/>
      <button label="Reset">
        <input type="value">1</input>
        <output>reset</output>
      </button>
    </view>
    <view label="Triggers">
      <value label="Trigger on 0" size="1" precision="2" unit="[[unit_short_second]]">
        <input>on0</input>
      </value>
      <value label="Trigger off 0" size="1" precision="2" unit="[[unit_short_second]]">
        <input>off0</input>
      </value>
      <separator height="1"/>
      <value label="Trigger on 1" size="1" precision="2" unit="[[unit_short_second]]">
        <input>on1</input>
      </value>
      <value label="Trigger off 1" size="1" precision="2" unit="[[unit_short_second]]">
        <input>off1</input>
      </value>
      <separator height="1"/>
      <value label="Trigger on 2" size="1" precision="2" unit="[[unit_short_second]]">
        <input>on2</input>
      </value>
      <value label="Trigger off 2" size="1" precision="2" unit="[[unit_short_second]]">
        <input>off2</input>
      </value>
      <separator height="1"/>
      <value label="Trigger on 3" size="1" precision="2" unit="[[unit_short_second]]">
        <input>on3</input>
      </value>
      <value label="Trigger off 3" size="1" precision="2" unit="[[unit_short_second]]">
        <input>off3</input>
      </value>
      <separator height="1"/>
      <value label="Trigger on 4" size="1" precision="2" unit="[[unit_short_second]]">
        <input>on4</input>
      </value>
      <value label="Trigger off 4" size="1" precision="2" unit="[[unit_short_second]]">
        <input>off4</input>
      </value>
      <separator height="1"/>
      <value label="Trigger on 5" size="1" precision="2" unit="[[unit_short_second]]">
        <input>on5</input>
      </value>
      <value label="Trigger off 5" size="1" precision="2" unit="[[unit_short_second]]">
        <input>off5</input>
      </value>
      <separator height="1"/>
      <button label="Reset">
        <input type="value">1</input>
        <output>reset</output>
      </button>
    </view>
    <view label="Many">
      <graph label="Trigger on events" labelX="Event number" labelY="Time interval" unitY="[[unit_short_second]]">
        <input axis="x">tindex</input>
        <input axis="y" style="vbars" lineWidth="0.9">dtlist</input>
      </graph>
      <graph label="Trigger durations" labelX="Event number" labelY="Duration" unitY="[[unit_short_second]]" scaleMinY="fixed" minY="0">
        <input axis="x">tindex</input>
        <input axis="y" style="vbars" lineWidth="0.9">ddlist</input>
      </graph>
      <value label="Event number" size="1" precision="0">
        <input>tindex</input>
      </value>
      <value label="Average interval" size="2" precision="3" unit="[[unit_short_second]]">
        <input>avgInterval</input>
      </value>
      <value label="Average rate" size="2" precision="2" unit="[[unit_short_hertz]]">
        <input>avgRate</input>
      </value>
      <value label="Average rate (bpm)" size="2" precision="1" unit="1/min">
        <input>avgBPM</input>
      </value>
      <button label="Reset">
        <input type="value">1</input>
        <output>reset</output>
      </button>
    </view>
  </views>
  <analysis>
    <split>
        <input as="data">inHue</input>
        <input as="index" type="value">1</input>
        <output>thisHue</output>
        <output>inHue</output>
    </split>
    <split>
        <input as="data">inT</input>
        <input as="index" type="value">1</input>
        <output>thisT</output>
        <output>inT</output>
    </split>
    <append>
        <input keep="true">thisHue</input>
        <output append="true">amplitude</output>
    </append>
    <append>
        <input keep="true">thisT</input>
        <output append="true">t</output>
    </append>

    <formula formula="min(heaviside([3]-[2])*(heaviside([3]-[1]) * heaviside([1]-[2])) + (1-heaviside([3]-[2]))*(heaviside([1]-[2]) + heaviside([3]-[1])),1)">
        <input keep="true">thisHue</input>
        <input keep="true">threshold_low</input>
        <input keep="true">threshold_high</input>
        <output>willTrigger</output>
    </formula>

    <count>
        <input clear="false">thisT</input>
        <output>count</output>
    </count>

    <formula formula="(1-[1])*[2]*[3]">
        <input keep="true">triggering</input>
        <input keep="true">willTrigger</input>
        <input keep="true">count</input>
        <output>isOnEvent</output>
    </formula>

    <formula formula="(1-[2])*[1]*[3]">
        <input keep="true">triggering</input>
        <input keep="true">willTrigger</input>
        <input keep="true">count</input>
        <output>isOffEvent</output>
    </formula>

    <if equal="true">
        <input>isOnEvent</input>
        <input type="value">1</input>
        <input keep="true">thisT</input>
        <output append="true">onEvents</output>
    </if>

    <if equal="true">
        <input>isOffEvent</input>
        <input type="value">1</input>
        <input keep="true">thisT</input>
        <output append="true">offEvents</output>
    </if>

    <if equal="true">
        <input>count</input>
        <input type="value">1</input>
        <input>willTrigger</input>
        <output append="true">triggering</output>
    </if>

    <append>
      <input keep="true">t</input>
      <output>on0</output>
    </append>
    <append>
      <input keep="true">t</input>
      <output>on1</output>
    </append>
    <append>
      <input keep="true">t</input>
      <output>on2</output>
    </append>
    <append>
      <input keep="true">t</input>
      <output>on3</output>
    </append>
    <append>
      <input keep="true">t</input>
      <output>on4</output>
    </append>
    <append>
      <input keep="true">t</input>
      <output>on5</output>
    </append>
    <append>
      <input keep="true">t</input>
      <output>off0</output>
    </append>
    <append>
      <input keep="true">t</input>
      <output>off1</output>
    </append>
    <append>
      <input keep="true">t</input>
      <output>off2</output>
    </append>
    <append>
      <input keep="true">t</input>
      <output>off3</output>
    </append>
    <append>
      <input keep="true">t</input>
      <output>off4</output>
    </append>
    <append>
      <input keep="true">t</input>
      <output>off5</output>
    </append>
    <if greater="true">
      <input clear="false">reset</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>amplitude</output>
    </if>
    <if greater="true">
      <input clear="false">reset</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>t</output>
    </if>
    <if greater="true">
      <input clear="false">reset</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>onEvents</output>
    </if>
    <if greater="true">
      <input clear="false">reset</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>offEvents</output>
    </if>
    <if greater="true">
      <input clear="false">reset</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>inT</output>
    </if>
    <if greater="true">
      <input clear="false">reset</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>inHue</output>
    </if>
    <if greater="true">
      <input clear="false">reset</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>triggering</output>
    </if>
    <append>
      <input type="value">0</input>
      <output>reset</output>
    </append>

    
    <!-- Collect results -->

    <subrange>
        <input keep="true">onEvents</input>
        <input type="value" as="from">0</input>
        <input type="value" as="length">1</input>
        <output append="true">on0</output>
    </subrange>
    <subrange>
        <input keep="true">onEvents</input>
        <input type="value" as="from">1</input>
        <input type="value" as="length">1</input>
        <output append="true">on1</output>
    </subrange>
    <subrange>
        <input keep="true">onEvents</input>
        <input type="value" as="from">2</input>
        <input type="value" as="length">1</input>
        <output append="true">on2</output>
    </subrange>
    <subrange>
        <input keep="true">onEvents</input>
        <input type="value" as="from">3</input>
        <input type="value" as="length">1</input>
        <output append="true">on3</output>
    </subrange>
    <subrange>
        <input keep="true">onEvents</input>
        <input type="value" as="from">4</input>
        <input type="value" as="length">1</input>
        <output append="true">on4</output>
    </subrange>
    <subrange>
        <input keep="true">onEvents</input>
        <input type="value" as="from">5</input>
        <input type="value" as="length">1</input>
        <output append="true">on5</output>
    </subrange>

    <subrange>
        <input keep="true">offEvents</input>
        <input type="value" as="from">0</input>
        <input type="value" as="length">1</input>
        <output append="true">off0</output>
    </subrange>
    <subrange>
        <input keep="true">offEvents</input>
        <input type="value" as="from">1</input>
        <input type="value" as="length">1</input>
        <output append="true">off1</output>
    </subrange>
    <subrange>
        <input keep="true">offEvents</input>
        <input type="value" as="from">2</input>
        <input type="value" as="length">1</input>
        <output append="true">off2</output>
    </subrange>
    <subrange>
        <input keep="true">offEvents</input>
        <input type="value" as="from">3</input>
        <input type="value" as="length">1</input>
        <output append="true">off3</output>
    </subrange>
    <subrange>
        <input keep="true">offEvents</input>
        <input type="value" as="from">4</input>
        <input type="value" as="length">1</input>
        <output append="true">off4</output>
    </subrange>
    <subrange>
        <input keep="true">offEvents</input>
        <input type="value" as="from">5</input>
        <input type="value" as="length">1</input>
        <output append="true">off5</output>
    </subrange>

    <subtract>
      <input clear="false">on1</input>
      <input clear="false">on0</input>
      <output>dt01</output>
    </subtract>
    <subtract>
      <input clear="false">on2</input>
      <input clear="false">on0</input>
      <output>dt02</output>
    </subtract>
    <subtract>
      <input clear="false">on3</input>
      <input clear="false">on0</input>
      <output>dt03</output>
    </subtract>
    <subtract>
      <input clear="false">on4</input>
      <input clear="false">on0</input>
      <output>dt04</output>
    </subtract>
    <subtract>
      <input clear="false">on5</input>
      <input clear="false">on0</input>
      <output>dt05</output>
    </subtract>
    <subtract>
      <input clear="false">on2</input>
      <input clear="false">on1</input>
      <output>dt12</output>
    </subtract>
    <subtract>
      <input clear="false">on3</input>
      <input clear="false">on2</input>
      <output>dt23</output>
    </subtract>
    <subtract>
      <input clear="false">on4</input>
      <input clear="false">on3</input>
      <output>dt34</output>
    </subtract>
    <subtract>
      <input clear="false">on5</input>
      <input clear="false">on4</input>
      <output>dt45</output>
    </subtract>
    <subtract>
      <input clear="false">off0</input>
      <input clear="false">on0</input>
      <output>don0</output>
    </subtract>
    <subtract>
      <input clear="false">off1</input>
      <input clear="false">on1</input>
      <output>don1</output>
    </subtract>
    <subtract>
      <input clear="false">off2</input>
      <input clear="false">on2</input>
      <output>don2</output>
    </subtract>
    <subtract>
      <input clear="false">off3</input>
      <input clear="false">on3</input>
      <output>don3</output>
    </subtract>
    <subtract>
      <input clear="false">off4</input>
      <input clear="false">on4</input>
      <output>don4</output>
    </subtract>
    <subtract>
      <input clear="false">off5</input>
      <input clear="false">on5</input>
      <output>don5</output>
    </subtract>
    <if less="true" equal="true">
      <input clear="false">dt01</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>dt01</output>
    </if>
    <if less="true" equal="true">
      <input clear="false">dt02</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>dt02</output>
    </if>
    <if less="true" equal="true">
      <input clear="false">dt03</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>dt03</output>
    </if>
    <if less="true" equal="true">
      <input clear="false">dt04</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>dt04</output>
    </if>
    <if less="true" equal="true">
      <input clear="false">dt05</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>dt05</output>
    </if>
    <if less="true" equal="true">
      <input clear="false">dt12</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>dt12</output>
    </if>
    <if less="true" equal="true">
      <input clear="false">dt23</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>dt23</output>
    </if>
    <if less="true" equal="true">
      <input clear="false">dt34</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>dt34</output>
    </if>
    <if less="true" equal="true">
      <input clear="false">dt45</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>dt45</output>
    </if>
    <if less="true" equal="true">
      <input clear="false">don0</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>don0</output>
    </if>
    <if less="true" equal="true">
      <input clear="false">don1</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>don1</output>
    </if>
    <if less="true" equal="true">
      <input clear="false">don2</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>don2</output>
    </if>
    <if less="true" equal="true">
      <input clear="false">don3</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>don3</output>
    </if>
    <if less="true" equal="true">
      <input clear="false">don4</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>don4</output>
    </if>
    <if less="true" equal="true">
      <input clear="false">don5</input>
      <input type="value">0</input>
      <input type="empty"/>
      <output>don5</output>
    </if>
    <count>
        <input clear="false">amplitude</input>
        <output>count</output>
    </count>
    <divide>
        <input clear="false">count</input>
        <input clear="false">t</input>
        <output>rate</output>
    </divide>

    <!-- BPM and many plot -->

    <differentiate>
      <input clear="false">onEvents</input>
      <output>dtlist</output>
    </differentiate>
    <average>
      <input clear="false">dtlist</input>
      <output>avgInterval</output>
    </average>
    <divide>
      <input type="value">1</input>
      <input clear="false">avgInterval</input>
      <output>avgRate</output>
    </divide>
    <multiply>
      <input clear="false">avgRate</input>
      <input type="value">60</input>
      <output>avgBPM</output>
    </multiply>
    <append>
      <input type="value">0</input>
      <input>dtlist</input>
      <input type="value">0</input>
      <output>dtlist</output>
    </append>

    <subtract>
        <input keep="true">offEvents</input>
        <input keep="true">onEvents</input>
        <output>ddlist</output>
    </subtract>
    <append>
      <input type="value">0</input>
      <output clear="false">ddlist</output>
    </append>

    <count>
      <input clear="false">ddlist</input>
      <output>tcount</output>
    </count>
    <subtract>
      <input clear="false">tcount</input>
      <input type="value">1</input>
      <output>tcount-1</output>
    </subtract>
    <ramp>
      <input as="start" type="value">0</input>
      <input as="stop">tcount-1</input>
      <input as="length">tcount</input>
      <output>tindex</output>
    </ramp>



  </analysis>
  <export>
    <set name="Raw">
      <data name="t (s)">t</data>
      <data name="Hue">amplitude</data>
    </set>
    <set name="Events">
      <data name="On (s)">onEvents</data>
      <data name="Off (s)">offEvents</data>
    </set>
  </export>
</phyphox>
